name: Deployment

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: 'Init: Summon NodeJS'
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: "Int: Set network timeout for 10 minutes"
        run: yarn config set network-timeout 600000 -g
      - name: 'Init: Install dependencies'
        run: yarn install
      - name: 'Nx: List affected projects'
        run: yarn affectedProject --list
      - name: 'Nx: Jest'
        run: yarn nx affected:test --base=HEAD~1 --head=HEAD
      - name: 'Nx: End-to-End'
        run: yarn nx affected:e2e --base=HEAD~1 --head=HEAD
      - name: 'Nx: Lint'
        run: yarn nx affected:lint --base=HEAD~1 --head=HEAD
  deploy-web:
    needs: test
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: 'Init: Summon NodeJS'
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: "Int: Set network timeout for 10 minutes"
        run: yarn config set network-timeout 600000 -g
      - name: 'Init: Install dependencies'
        run: yarn install
      - name: "Nx: Build apps/web"
        run: yarn nx build web
      - name: "Deploy: Upload to Netlify"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WEB_ID }}
        run: |
          isAffected=$(yarn --silent affectedProject --project web)
          if $isAffected; then
            yarn global add netlify-cli
            netlify deploy --dir=apps/web/public --message "Automatic deployment from GitHub Actions" --prod
          else
            echo "No changes found! Skipping..."
          fi
      - name: "Artifacts: Upload"
        uses: actions/upload-artifact@v1
        with:
          name: web
          path: apps/web/public
  deploy-api:
    needs: test
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: 'Init: Summon NodeJS'
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: "Int: Set network timeout for 10 minutes"
        run: yarn config set network-timeout 600000 -g
      - name: 'Init: Install dependencies'
        run: yarn install
      - name: "Nx: Build apps/api"
        run: yarn nx build api
      - name: "Deploy: Upload to Now"
        env:
          NOW_ORG_ID: ${{ secrets.NOW_ORG_ID }}
          NOW_PROJECT_ID: ${{ secrets.NOW_API_ID }}
          NOW_AUTH_TOKEN: ${{ secrets.NOW_AUTH_TOKEN }}
        run: |
          isAffected=$(yarn --silent affectedProject --project api)
          if $isAffected; then
            yarn global add now
            now -t $NOW_AUTH_TOKEN --prod
          else
            echo "No changes found! Skipping..."
          fi
      - name: "Artifacts: Upload"
        uses: actions/upload-artifact@v1
        with:
          name: api
          path: dist/apps/api
  deploy-poster:
    needs: test
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: 'Init: Summon NodeJS'
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: "Int: Set network timeout for 10 minutes"
        run: yarn config set network-timeout 600000 -g
      - name: 'Init: Install dependencies'
        run: yarn install
      - name: "Nx: Export apps/poster"
        run: yarn nx export poster
      - name: "Deploy: Upload to Netlify"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_POSTER_ID }}
        run: |
          isAffected=$(yarn --silent affectedProject --project poster)
          if $isAffected; then
            yarn global add netlify-cli
            netlify deploy --dir=dist/apps/poster/exported --message "Automatic deployment from GitHub Actions" --prod
          else
            echo "No changes found! Skipping..."
          fi
      - name: "Artifacts: Upload"
        uses: actions/upload-artifact@v1
        with:
          name: poster
          path: dist/apps/poster/exported
